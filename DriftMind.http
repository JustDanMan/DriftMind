@DriftMind_HostAddress = http://localhost:5151

# Upload Text Example
POST {{DriftMind_HostAddress}}/upload
Content-Type: application/json

{
  "text": "This is an example text that should be split into chunks and stored as embeddings. This text will be processed by the system and indexed in an Azure AI Search database. The chunks are created with overlap to preserve context. Each chunk receives an embedding that can be used for vector search operations. This enables semantic search over the stored content.",
  "documentId": "test-document-1",
  "metadata": "Example document for testing",
  "chunkSize": 200,
  "chunkOverlap": 50
}

###

# Upload Text with default settings
POST {{DriftMind_HostAddress}}/upload
Content-Type: application/json

{
  "text": "Artificial Intelligence is revolutionizing the way we interact with technology. Machine Learning algorithms can learn from large datasets and identify patterns. Natural Language Processing enables computers to understand and process human language. Deep Learning networks can handle complex tasks like image recognition and language translation.",
  "metadata": "AI and ML fundamentals"
}

###

# Search with GPT-4o Answer Generation
POST {{DriftMind_HostAddress}}/search
Content-Type: application/json

{
  "query": "What is Machine Learning?",
  "maxResults": 5,
  "useSemanticSearch": true,
  "includeAnswer": true
}

###

# Search without Answer Generation
POST {{DriftMind_HostAddress}}/search
Content-Type: application/json

{
  "query": "Artificial Intelligence",
  "maxResults": 10,
  "useSemanticSearch": true,
  "includeAnswer": false
}

###

# Search in specific Document
POST {{DriftMind_HostAddress}}/search
Content-Type: application/json

{
  "query": "Deep Learning",
  "maxResults": 3,
  "useSemanticSearch": true,
  "documentId": "test-document-1",
  "includeAnswer": true
}

###

# Text-only Search (no semantic/vector search)
POST {{DriftMind_HostAddress}}/search
Content-Type: application/json

{
  "query": "Technology",
  "maxResults": 5,
  "useSemanticSearch": false,
  "includeAnswer": true
}

###

# Upload File Example (.txt)
POST {{DriftMind_HostAddress}}/upload/file
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="sample.txt"
Content-Type: text/plain

This is a sample text file content that will be processed by the system.
It contains multiple sentences and paragraphs to demonstrate the chunking functionality.

The text processing pipeline will extract this content and create embeddings for semantic search.
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="documentId"

file-upload-test-1
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="metadata"

Sample text file for testing
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="chunkSize"

500
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="chunkOverlap"

100
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

# Upload Markdown File Example
POST {{DriftMind_HostAddress}}/upload/file
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="readme.md"
Content-Type: text/markdown

# Project Documentation

## Overview
This is a comprehensive guide to understanding the project architecture.

## Features
- Text processing
- Embedding generation
- Semantic search
- File upload support

### Technical Details
The system uses Azure OpenAI for embeddings and Azure AI Search for storage.
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="documentId"

markdown-doc-1
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="metadata"

Project documentation markdown
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

# List All Documents (POST)
POST {{DriftMind_HostAddress}}/documents
Content-Type: application/json

{
  "maxResults": 20,
  "skip": 0
}

###

# List All Documents (GET)
GET {{DriftMind_HostAddress}}/documents?maxResults=10&skip=0

###

# List Specific Document by ID
POST {{DriftMind_HostAddress}}/documents
Content-Type: application/json

{
  "maxResults": 1,
  "skip": 0,
  "documentIdFilter": "file-upload-test-1"
}

###

# List Specific Document by ID (GET)
GET {{DriftMind_HostAddress}}/documents?maxResults=1&skip=0&documentId=markdown-doc-1

###

# Delete Document by URL Parameter (DELETE)
DELETE {{DriftMind_HostAddress}}/documents/file-upload-test-1

###

# Delete Document using POST with JSON body
POST {{DriftMind_HostAddress}}/documents/delete
Content-Type: application/json

{
  "documentId": "markdown-doc-1"
}

###

# Delete Non-Existent Document (should return 404)
DELETE {{DriftMind_HostAddress}}/documents/non-existent-document

###
